{"version":3,"file":"pages/about/about.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAfA;AAAA;AAiBA;;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;AC1JA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://ybzsTaro/._src_pages_about_about.jsx","webpack://ybzsTaro/._src_components_AddressPicker_index.jsx","webpack://ybzsTaro/./src/pages/about/about.jsx?2fa8"],"sourcesContent":["import { View, Text, Picker, Input } from '@tarojs/components'\nimport { AtIcon } from 'taro-ui'\nimport Taro from '@tarojs/taro'\nimport { useState, useEffect } from 'react'\n// import api from '../services/api'\n\nimport './about.less'\n\n\n// eslint-disable-next-line import/first\nimport List from 'components/List'\n// eslint-disable-next-line import/first\nimport HeaderNav from 'components/HeaderNav'\n// eslint-disable-next-line import/first\nimport AddressPicker from 'components/AddressPicker'\n\n\n\n\nfunction About() {\n\n    const selectOption = ['企业名称', '人员姓名', '动物名称', '业务类型', '保护级别']\n    const [listName, $listName] = useState('企业')\n    const [filterOption, $filterOption] = useState('DOMESTICATION_BREED')\n    // 筛选项的条件\n    // eslint-disable-next-line no-unused-vars\n    const [filter, $filter] = useState({})\n    // 描述文字对象\n    // eslint-disable-next-line no-unused-vars\n    const [textArr, $textArr] = useState()\n    //  筛选项中的选择框\n    const [multiIndex, $multiIndex] = useState(selectOption[0])\n    //  筛选框中的 input 状态\n    const [selectStatus, $selectStatus] = useState(true)\n    // eslint-disable-next-line no-unused-vars\n    const [resObj, $resObj] = useState([\n        {\n            id: 3,\n            pic: '',\n            f1: '成都第一家公司',\n            f2: '成都是打四代是大红色大上课打卡时间到',\n            f3: [\n                { value: '正常', key: 'NORMAL' },\n                { value: '驯养繁殖', key: 'NORMAL' },\n            ],\n            f4: [\n                { value: '动物 2 种 / 12 只' },\n                { value: 2 }\n            ]\n        }\n    ])\n\n    const navBtnGroup = [`${listName}台账`,`${listName}总览`]\n\n    // 获取列表名\n    const getListName = (name) => {\n        if(name === '物种列表') $listName('物种')\n        else if(name === '企业列表') $listName('企业')\n        else if(name === '业务列表') $listName('业务')\n    }\n\n    const filterObject = (item) => {\n        // Taro.request({\n        //     url: chooseURL(),\n        //     method: 'POST',\n        //     data:\n        //     {\n        //         \"id\": \"AnimalLedgerPageHandler\",\n        //         \"filterList\": [{\n        //             \"key\": \"companyType\",\n        //             \"operation\": \"IN\",\n        //             \"values\": item,\n        //         }],\n        //         \"orderList\": []\n        //     },\n        //     success: function (res) {\n        //         $resObj(res.data.data.records)\n        //     }\n        // })\n        $filterOption(item)\n    }\n\n    const ChangeSelect = (e) => {\n        $multiIndex(selectOption[e.detail.value])\n    }\n    const changeStatus = () => {\n        $selectStatus(!selectStatus)\n    }\n\n    const routerMap = {\n        '企业': '/pages/index/index?routerLevel=3&type=company',\n        '物种': '/pages/list/list?routerLevel=3&type=animal',\n        '业务': '/pages/detail/detail?routerLevel=3&type=business',\n      }\n\n\n    // 管理列表内的卡片跳转地址\n    const routerManager = () => {\n        Taro.navigateTo({ url: routerMap[listName] })\n    }\n\n\n    return (\n        <View>\n            <HeaderNav navGroup={navBtnGroup} />\n            <View className='page-about-container'>\n                <View className='about-filter-nav-area'>\n                    <View className='filter-row'>\n                    <AddressPicker />\n                    <View className={['inputArea', !selectStatus ? 'active' : '']}>\n                        {selectStatus && (\n                                <>\n                                    <AtIcon value='search' size='20' onClick={changeStatus} />\n                                    <Text className='search-text' style={{ margin: '0 10rpx' }}>查询</Text>\n                                </>\n                            )}\n                        {!selectStatus &&\n                            <>\n                                <AtIcon value='search' size='20' onClick={changeStatus} />\n                                <Picker className='selectInput' mode='selector' range={selectOption} onChange={ChangeSelect}>\n                                    <View className='picker'>{multiIndex}</View>\n                                </Picker>\n                                <Input className='filter-input' placeholder='点击输入（对应）名称' /></>\n                        }\n                    </View>\n                    </View>\n\n                    <View className='switchArea'>\n                        <View className={['about-filter-nav-item', filterOption == 'DOMESTICATION_BREED' ? 'filter-nav-active' : '']} onClick={() => filterObject(['DOMESTICATION_BREED'])}>驯养繁殖</View>\n                        <View className={['about-filter-nav-item', filterOption == 'CONTAINMENT_ASSISTANCE' ? 'filter-nav-active' : '']} onClick={() => filterObject(['CONTAINMENT_ASSISTANCE'])}>收容救助</View>\n                    </View>\n                </View>\n                <View className='text-area' style={{ margin: '10px' }}>\n                    {\n                        listName == '企业' ?\n                            <View>\n                                在<Text>{textArr?.numberOfSubRegions}</Text>个区县内分布有<Text>{textArr?.numberOfBusinessPieces}</Text>家驯养繁殖企业。总面积为<Text>{textArr?.numberOfAnimalSpecies}</Text>万亩，总人数为<Text>{textArr?.numberOfTotalPeople}</Text>人。共开展<Text>{textArr?.numberOfBusinessTypes}</Text>类<Text>{textArr?.numberOfAnimalSpecies}</Text>件业务，涉及动物<Text>{textArr?.numberOfEnterprises}</Text>种共<Text>{textArr?.numberOfTotalAnimal}</Text>万只。\n                            </View>\n                            :\n                            <View>\n                                在<Text>{textArr?.numberOfSubRegions}</Text>个区县的<Text>{textArr?.numberOfBusinessPieces}</Text>家驯养繁殖企业对<Text>{textArr?.numberOfEnterprises}</Text>种动物共<Text>{textArr?.numberOfAnimalSpecies}</Text>只开展<Text>{textArr?.numberOfBusinessTypes}</Text>类<Text></Text>件驯养繁殖业务。其中一级<Text>{textArr?.numberOfBusinessPieces}</Text>只，二级<Text>{textArr?.numberOfTotalAnimal}</Text>只，三级有<Text>{textArr?.numberOfTotalAnimal}</Text>只，外来<Text>{textArr?.numberOfBusinessPieces}</Text>只。\n                            </View>\n                    }\n                </View>\n                <List \n                  listSource={resObj} \n                  getListName={getListName} \n                  routerManager={routerManager} \n                />\n            </View>\n        </View>\n    )\n}\n\nexport default About","import { View, Image, Picker } from '@tarojs/components';\nimport Taro from '@tarojs/taro';\nimport { useState, useEffect } from 'react';\nimport { AtIcon } from 'taro-ui'\n\nimport './index.less';\n\n\nconst AddressPicker = () => {\n\n  const datahaha = [\n        {\n          code: 5101,\n          name: '成都市',\n          selected: 0,\n          parentcode: 51,\n          value: null,\n          children: [\n            {\n              code: 510116,\n              name: '双流区',\n              selected: 0,\n              parentcode: 5101,\n              value: null,\n              children: null,\n            },\n            {\n              code: 510184,\n              name: '邛州',\n              selected: 0,\n              parentcode: 5101,\n              value: null,\n              children: null,\n            }\n          ]\n        },\n        {\n          code: 5106,\n          name: '德阳市',\n          selected: 0,\n          parentcode: 51,\n          value: null,\n          children: [\n            {\n              code: 510623,\n              name: '中江县',\n              selected: 0,\n              parentcode: 5106,\n              value: null,\n              children: null\n            }\n          ]\n        }\n  ]\n\n    const [firstLevel, setFirstLevel] = useState([]);\n    const [secLevel, setSecLevel] = useState([]);\n    const [multiIndex, setMultiIndex] = useState([]); // multiIndex: [[第一级的 index]，[第二级的 index]]\n    const [chooseAddress,setChooseAddress] = useState(null);\n\n\n  useEffect(() => {\n    if (multiIndex.length > 0) {\n      const firstIndex = multiIndex[0];\n      const secOptions = datahaha[firstIndex].children.map((item) => item.name);\n      setSecLevel(secOptions);\n      setChooseAddress(datahaha[multiIndex[0]].children[multiIndex[1]])\n      setFirstLevel(datahaha.map((item) => item.name))\n    }\n  }, [multiIndex]);\n\n  const mockData = [datahaha.map((item) => item.name), secLevel];\n\n  const handleColumnChange = (e) => {\n    const { column, value } = e.detail;\n    if (column === 0) {\n      setMultiIndex([value, 0]);\n    }\n  };\n\n  const handleChange = (e) => {\n    setMultiIndex(e.detail.value);\n  };\n\n  return (\n    <View className='addressPick-container'>\n      <Picker\n        mode='multiSelector'\n        value={multiIndex}\n        range={mockData}\n        onChange={handleChange}\n        onColumnChange={handleColumnChange}\n      >\n        <View>{multiIndex.length === 0 ? '请选择' : `${firstLevel[multiIndex[0]]} , ${secLevel[multiIndex[1]]}`}</View>\n      </Picker>\n      <AtIcon value='chevron-down' size='10' />\n    </View>\n  );\n};\n\nexport default AddressPicker;\n\n\n\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./about.jsx\"\nvar config = {\"navigationStyle\":\"custom\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/about/about', {root:{cn:[]}}, config || {}))\n\n\n"],"names":[],"sourceRoot":""}